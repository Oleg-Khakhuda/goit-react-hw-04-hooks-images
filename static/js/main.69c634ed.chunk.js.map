{"version":3,"sources":["Modal/Modal.module.css","ImageGallery/ImageGallery.module.css","ImageGalleryItem/ImageGalleryItem.module.css","Button/Button.module.css","Loader/Loader.module.css","Searchbar/Searchbar.module.css","Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","services/search-api.js","Button/Button.js","Loader/Loader.js","Modal/Modal.js","ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchImageName","setSearchImageName","className","s","SearchForm","e","preventDefault","trim","toast","error","type","SearchForm__button","SearchForm__button__label","SearchForm__input","value","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","searchResult","onImageClick","map","el","src","webformatURL","alt","tags","ImageGalleryItem__image","onClick","id","PixabayFetch","this","base_url","api_key","_searchQuery","_page","_perPage","a","url","page","axios","get","result","data","hits","message","Button","load_more","Spinner","Loader","color","height","width","timeout","Modal","toggleModal","bigImg","useEffect","window","addEventListener","handleKeyDownClose","removeEventListener","code","target","Overlay","Img","largeImageURL","newPixabayFetch","ImageGallery","scroll","setSearchResult","status","setStatus","setBigImg","showModal","setShowModal","resetPage","searchQuery","searchImages","then","catch","err","text","imgSrc","find","prev","App","state","handleSearchbarSubmit","setState","scrollTo","top","document","documentElement","offsetHeight","behavior","onPageScroll","autoClose","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,IAAM,qB,mBCAtFD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,6B,mBCA3ED,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,wBAA0B,oD,mBCA1GD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,OAAS,yB,4DCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,mBAAqB,sCAAsC,0BAA4B,6CAA6C,kBAAoB,uC,iKCwC/OC,EApCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA6CC,mBAAS,IAAtD,mBAAMC,EAAN,KAAuBC,EAAvB,KAgBE,OACE,wBAAQC,UAAWC,IAAEN,UAArB,SACE,uBAAMK,UAAWC,IAAEC,WAAYN,SAZhB,SAAAO,GACnBA,EAAEC,iBAC6B,KAA3BN,EAAgBO,QAIpBT,EAASE,GACTC,EAAmB,KAJjBO,IAAMC,MAAM,kJASV,UACE,wBAAQC,KAAK,SAASR,UAAWC,IAAEQ,mBAAnC,SACE,sBAAMT,UAAWC,IAAES,0BAAnB,sBAGF,uBACEV,UAAWC,IAAEU,kBACbC,MAAOd,EACPU,KAAK,OACLK,YAAY,2BACZC,SA1Be,SAAAX,GACvBJ,EAAmBI,EAAEY,cAAcH,MAAMI,wB,iCCO9BC,EAbU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACtC,OAAOD,EAAaE,KAAI,SAAAC,GAAE,OACxB,oBAAIrB,UAAWC,IAAEgB,iBAAjB,SACE,qBACEK,IAAKD,EAAGE,aACRC,IAAKH,EAAGI,KACRzB,UAAWC,IAAEyB,wBACbC,QAASR,KAL2BE,EAAGO,Q,0CCHpCC,EAAb,WACE,aAAe,oBACbC,KAAKC,SAAL,2BACAD,KAAKE,QAAL,qCACAF,KAAKG,aAAe,GACpBH,KAAKI,MAAQ,EACbJ,KAAKK,SAAW,GANpB,6CAQE,WACE,OAAOL,KAAKG,cAThB,IAWE,SAAgBrB,GACd,OAAQkB,KAAKG,aAAerB,IAZhC,gBAcE,WACE,OAAOkB,KAAKI,OAfhB,IAiBE,SAAStB,GACP,OAAQkB,KAAKI,OAAStB,IAlB1B,uBAoBE,WACE,OAAQkB,KAAKI,MAAQ,IArBzB,iEAwBE,gCAAAE,EAAA,6DACQC,EADR,UACiBP,KAAKC,SADtB,cACoCD,KAAKG,aADzC,iBAC8DH,KAAKQ,KADnE,gBAC+ER,KAAKE,QADpF,6DACgJF,KAAKK,UADrJ,kBAIyBI,IAAMC,IAAIH,GAJnC,cAIUI,EAJV,OAKUC,EAAOD,EAAOC,KAAKC,KAL7B,kBAMWD,GANX,yDAQW,KAAME,SARjB,yDAxBF,6D,iBCgBeC,EAdA,SAAC,GAAiB,IAAflB,EAAc,EAAdA,QAChB,OACE,qBAAK3B,UAAWC,IAAE6C,UAAlB,SACE,wBAAQ9C,UAAWC,IAAE4C,OAAQrC,KAAK,SAASmB,QAASA,EAApD,0B,0CCUSoB,EAbC,WACd,OACE,cAAC,IAAD,CACE/C,UAAWC,IAAE+C,OACbxC,KAAK,OACLyC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,O,iBCsBAC,EA9BD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC5BC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,kBAAMF,OAAOG,oBAAoB,UAAWD,OAGrD,IAAMA,EAAqB,SAAAxD,GACV,WAAXA,EAAE0D,MACJP,KASF,OACE,qBAAK3B,QAPmB,SAAAxB,GACtBA,EAAEY,gBAAkBZ,EAAE2D,QACxBR,KAKmCtD,UAAWC,IAAE8D,QAAhD,SACE,qBAAK/D,UAAWC,IAAEoD,MAAlB,SACE,qBACErD,UAAWC,IAAE+D,IACb1C,IAAKiC,EAAOU,cACZzC,IAAK+B,EAAO9B,Y,iBCjBlByC,EAAkB,IAAIrC,EAiFbsC,EA/EM,SAAC,GAAiC,IAA/BrE,EAA8B,EAA9BA,gBAAiBsE,EAAa,EAAbA,OACvC,EAAwCvE,mBAAS,IAAjD,mBAAOqB,EAAP,KAAqBmD,EAArB,KACA,EAA4BxE,mBAAS,QAArC,mBAAOyE,EAAP,KAAeC,EAAf,KACA,EAA4B1E,mBAAS,MAArC,mBAAO0D,EAAP,KAAeiB,EAAf,KACA,EAAkC3E,oBAAS,GAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KAEAlB,qBAAU,WACH1D,EAAgBO,SACrBkE,EAAU,WACVL,EAAgBS,YAChBT,EAAgBU,YAAc9E,EAC9BoE,EACGW,eACAC,MAAK,SAAA5D,GACJqD,EAAU,WACVF,EAAgBnD,MAEjB6D,OAAM,SAAAC,GACLT,EAAU,eAGb,CAACzE,EAAiBuE,IAErB,IAeMf,EAAc,WAClBoB,GAAcD,IAUhB,MAAe,SAAXH,EACK,mBAAGtE,UAAWC,IAAEgF,KAAhB,kDAEM,YAAXX,EACK,cAACtB,EAAD,IAEM,YAAXsB,EAEA,qCACE,oBAAItE,UAAWC,IAAEkE,aAAjB,SACE,cAAC,EAAD,CACEjD,aAAcA,EACdC,aAnBW,SAAAhB,GACnBA,EAAEC,iBACF,IAAI8E,EAAS/E,EAAE2D,OAAOxC,IACtBkD,EAAUtD,EAAaiE,MAAK,SAAA9D,GAAE,OAAIA,EAAGE,eAAiB2D,MACtD5B,SAkBI,cAAC,EAAD,CAAQ3B,QAzCM,WAClBuC,EAAgB5B,KAAO,EACvB4B,EACGW,eACAC,MAAK,SAAA5D,GACJmD,GAAgB,SAAAe,GAAI,4BACdA,GADc,YACLlE,OACfqD,EAAU,WACVH,OAEDW,OAAM,SAAAC,GACLT,EAAU,eA+BTE,GACC,cAAC,EAAD,CACEnB,YAAaA,EACbC,OAAQA,OAMH,UAAXe,EACK,mBAAGtE,UAAWC,IAAEgF,KAAhB,uCADT,GC/EmBI,E,4MACnBC,MAAQ,CACNxF,gBAAiB,GACjB2E,WAAW,G,EAGbc,sBAAwB,SAAAzF,GACtB,EAAK0F,SAAS,CAAE1F,qB,kDAGlB,WACE2D,OAAOgC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,a,oBAId,WACE,OACE,qCACE,cAAC,EAAD,CAAWlG,SAAUkC,KAAKyD,wBAC1B,cAAC,EAAD,CACEzF,gBAAiBgC,KAAKwD,MAAMxF,gBAC5BsE,OAAQtC,KAAKiE,eAGf,cAAC,IAAD,CAAgBC,UAAW,a,GA1BFC,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFT,SAASU,eAAe,W","file":"static/js/main.69c634ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3q4yr\",\"Modal\":\"Modal_Modal__jcL_H\",\"Img\":\"Modal_Img__39aa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__KpgRB\",\"text\":\"ImageGallery_text__fo2i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1oHqA\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__kXvQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load_more\":\"Button_load_more__1CTFi\",\"Button\":\"Button_Button__2ObI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__14zLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__kZZBw\",\"SearchForm\":\"Searchbar_SearchForm__1mHC8\",\"SearchForm__button\":\"Searchbar_SearchForm__button__1ZhEk\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__3wiiv\",\"SearchForm__input\":\"Searchbar_SearchForm__input__2RB6R\"};","import React from 'react';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from '../Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const[searchImageName, setSearchImageName] = useState('');\n\n  const handleNameChange = e => {\n    setSearchImageName(e.currentTarget.value.toLowerCase())\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchImageName.trim() === '') {\n      toast.error('Введите название картинки!');\n      return;\n    }\n    onSubmit(searchImageName);\n    setSearchImageName('');\n  };\n\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.SearchForm__button}>\n            <span className={s.SearchForm__button__label}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchForm__input}\n            value={searchImageName}\n            type=\"text\"\n            placeholder=\"Search images and photos\"\n            onChange={handleNameChange}\n          />\n        </form>\n      </header>\n    );\n}\n\nexport default Searchbar;","import PropTypes from 'prop-types';\nimport s from '../ImageGalleryItem/ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ searchResult, onImageClick }) => {\n    return searchResult.map(el => (\n      <li className={s.ImageGalleryItem} key={el.id}>\n        <img\n          src={el.webformatURL}\n          alt={el.tags}\n          className={s.ImageGalleryItem__image}\n          onClick={onImageClick}\n        />\n      </li>\n    ));\n}\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  searchResult: PropTypes.array.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nexport class PixabayFetch {\n  constructor() {\n    this.base_url = `https://pixabay.com/api/`;\n    this.api_key = `22572278-f825929a97bc5f7e53341dcc7`;\n    this._searchQuery = '';\n    this._page = 1;\n    this._perPage = 12;\n  }\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async searchImages() {\n    const url = `${this.base_url}?q=${this._searchQuery}&page=${this.page}&key=${this.api_key}&image_type=photo&orientation=horizontal&per_page=${this._perPage}`;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Button/Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className={s.load_more}>\n      <button className={s.Button} type=\"button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport s from '../Loader/Loader.module.css';\n\nconst Spinner = () => {\n  return (\n    <Loader\n      className={s.Loader}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n};\n\nexport default Spinner;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Modal/Modal.module.css';\n\nconst Modal = ({ toggleModal, bigImg }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDownClose);\n    return () => window.removeEventListener('keydown', handleKeyDownClose);\n  })\n\n  const handleKeyDownClose = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n    return (\n      <div onClick={handleBackdropClose} className={s.Overlay}>\n        <div className={s.Modal}>\n          <img\n            className={s.Img}\n            src={bigImg.largeImageURL}\n            alt={bigImg.tags}\n          />\n        </div>\n      </div>\n    );\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  bigImg: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport { PixabayFetch } from '../services/search-api';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport s from '../ImageGallery/ImageGallery.module.css';\n\nconst newPixabayFetch = new PixabayFetch();\n\nconst ImageGallery = ({ searchImageName, scroll }) => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [bigImg, setBigImg] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!searchImageName.trim()) return;\n    setStatus('pending')\n    newPixabayFetch.resetPage();\n    newPixabayFetch.searchQuery = searchImageName;\n    newPixabayFetch\n      .searchImages()\n      .then(searchResult => {\n        setStatus('success');\n        setSearchResult(searchResult);\n      })\n      .catch(err => {\n        setStatus('error')\n      });\n    // return () => alert('unmount');\n  }, [searchImageName, setSearchResult])\n\n  const handleClick = () => {\n    newPixabayFetch.page = 1;\n    newPixabayFetch\n      .searchImages()\n      .then(searchResult => {\n        setSearchResult(prev =>\n          [...prev, ...searchResult]);\n        setStatus('success');\n        scroll();\n      })\n      .catch(err => {\n        setStatus('error')\n      });\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal)\n  };\n\n  const onImageClick = e => {\n    e.preventDefault();\n    let imgSrc = e.target.src;\n    setBigImg(searchResult.find(el => el.webformatURL === imgSrc))\n    toggleModal();\n  };\n\n  if (status === 'idle') {\n    return <p className={s.text}>Hello! Enter the name of the picture</p>;\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'success') {\n    return (\n      <>\n        <ul className={s.ImageGallery}>\n          <ImageGalleryItem\n            searchResult={searchResult}\n            onImageClick={onImageClick}\n          />\n        </ul>\n        <Button onClick={handleClick} />\n        {showModal && (\n          <Modal\n            toggleModal={toggleModal}\n            bigImg={bigImg}\n          ></Modal>\n        )}\n      </>\n    );\n  }\n  if (status === 'error') {\n    return <p className={s.text}>Something went wrong</p>;\n  }\n}\n   \nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  searchImageName: PropTypes.string.isRequired,\n  scroll: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './Searchbar/Searchbar';\nimport './App.css';\nimport ImageGallery from './ImageGallery/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    searchImageName: '',\n    showModal: false,\n  };\n\n  handleSearchbarSubmit = searchImageName => {\n    this.setState({ searchImageName });\n  };\n\n  onPageScroll() {\n    window.scrollTo({\n      top: document.documentElement.offsetHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        <ImageGallery\n          searchImageName={this.state.searchImageName}\n          scroll={this.onPageScroll}\n        />\n\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}